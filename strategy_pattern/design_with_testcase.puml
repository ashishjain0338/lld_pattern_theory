@startuml abc

/'
class Dummy {
-field1
#field2
~method1()
+method2()
}'/

class TestCaseExecutor{
    testCaseReaderObj: TestCaseReader
    testCaseRunnerObj : TestCaseRunner
    +execute
}

TestCaseExecutor *-- TestCaseReader
TestCaseExecutor *-- TestCaseRunner
abstract TestCaseReader{

}

class TextFileReader extends TestCaseReader{

}

class UserInput extends TestCaseReader{

}

abstract class TestCaseRunner{
    +help()
    +reset()
    +address_line()
    +show_state()
}

class NavigaionTestCaseRunner extends TestCaseRunner{
    +help()
    +reset()
    +address_line()
    +show_state()
}

abstract class Navigation{
    +rtStrategy : RouteStrategy
    +navigate()
    +changeRouteStrategy()
}

class BikeNavigation extends Navigation{
    +navigate()
}

class CarNavigation extends Navigation{
}

class WalkNavigation extends Navigation{
    +navigate()
}

abstract class RouteStrategy{
    +navigate()
    +estimateTimeOfArrival()
}

class ScenicTimeRouteFinding extends RouteStrategy{
    +navigate()
    +estimateTimeOfArrival()
}

class ShortestDistanceRouteFinding extends RouteStrategy{
    +navigate()
    +estimateTimeOfArrival()
}

class ShortestTimeRouteFinding extends RouteStrategy{
    +navigate()
    +estimateTimeOfArrival()
}

class RouteStrategyFactory{
    +getRouteObj()
}

Navigation *-- RouteStrategy : has-a
RouteStrategyFactory --> RouteStrategy : creates
Navigation --> RouteStrategyFactory : getRouteObj
NavigaionTestCaseRunner --> Navigation : uses
@enduml